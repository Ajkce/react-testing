[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"import React, { useState } from 'react';\nimport { render, screen } from '@testing-library/react';\nimport user from '@testing-library/user-event';\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n  return <button onClick={() => setCount((c) => c + 1)}>\n    Count: {count}\n  </button>\n};\nrender(<Counter />);","type":"code","id":"az9bh"},{"content":"### This is the text\n[My website](https://localhost:4005)\n\n----------\n## \n","type":"text","id":"ne2re"},{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>COntentInfo</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img src=\"\" alt=\"description\" />\n      <input type=\"text\" name=\"\" id=\"\" />\n      <input type=\"checkbox\" name=\"\" id=\"\" />\n      <input type=\"radio\" name=\"\" id=\"\" />\n      <input type=\"number\" name=\"\" id=\"\" />\n      <li>ListItem</li>\n      <ul>List group</ul>\n    </div>\n  );\n}\n\nrender(<RoleExample/>)","type":"code","id":"xt31s"},{"content":"test(\"Can find elements by role\", () => { \r\n  render(<RoleExample/>)\r\n\r\nconst roles = [\r\n  'link',\r\n  'button',\r\n  'contentinfo',\r\n  'heading',\r\n  'banner',\r\n  'img',\r\n  'checkbox',\r\n  'spinbutton',\r\n  'radio',\r\n  'textbox',\r\n  'listitem',\r\n  'list'\r\n]\r\n\r\nfor (let role of roles){\r\n  const el = screen.getByRole(role);\r\n  expect(el).toBeInTheDocument();\r\n}\r\n\r\n});","type":"code","id":"0o1vj"},{"content":"function AccessibleName () {\r\n  return (\r\n    <div>\r\n    <button aria-label=\"sign-in\"></button>\r\n    <button aria-label=\"sign-out\">Cancel</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<AccessibleName/>)","type":"code","id":"o2il0"},{"content":"test(\"Can't select by accessible name\", () => {\r\n  render(<AccessibleName/>)\r\n\r\n  const signInButton = screen.getByRole('button', {\r\n    name: /sign-in/i\r\n  })\r\n\r\n  expect(signInButton).toBeInTheDocument()\r\n})","type":"code","id":"08t7n"}]